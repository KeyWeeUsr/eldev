(require 'test/common)


(ert-deftest emake-test-upgrade-self-1 ()
  (emake--test-create-emake-archive "emake-archive-1")
  (emake--test-create-emake-archive "emake-archive-2" "999.9")
  (let ((emake--test-project     "trivial-project")
        (emake--test-emake-local (concat ":pa:" (emake--test-tmp-subdir "emake-archive-1")))
        (emake--test-emake-dir   (emake--test-tmp-subdir "upgrade-self-root")))
    (ignore-errors (delete-directory emake--test-emake-dir t))
    (emake--test-run nil ("version")
      (should (string= stdout (format "emake %s\n" (emake-message-version (emake-find-package-descriptor 'emake)))))
      (should (= exit-code 0)))
    (emake--test-run nil ("--setup" (prin1-to-string `(setf emake--upgrade-self-from-forced-pa ,(emake--test-tmp-subdir "emake-archive-2"))) "upgrade-self")
      (should (string= stdout "Upgraded or installed 1 package\n"))
      (should (= exit-code 0)))
    (emake--test-run nil ("version")
      (should (string= stdout "emake 999.9\n"))
      (should (= exit-code 0)))))

;; Trying to upgrade from the archive we have bootstrapped.  Nothing to do.
(ert-deftest emake-test-upgrade-self-2 ()
  (emake--test-create-emake-archive "emake-archive-1")
  (let ((emake--test-project     "trivial-project")
        (emake--test-emake-local (concat ":pa:" (emake--test-tmp-subdir "emake-archive-1")))
        (emake--test-emake-dir   (emake--test-tmp-subdir "upgrade-self-root")))
    (ignore-errors (delete-directory emake--test-emake-dir t))
    (emake--test-run nil ("version")
      (should (string= stdout (format "emake %s\n" (emake-message-version (emake-find-package-descriptor 'emake)))))
      (should (= exit-code 0)))
    (emake--test-run nil ("--setup" (prin1-to-string `(setf emake--upgrade-self-from-forced-pa ,(emake--test-tmp-subdir "emake-archive-1"))) "upgrade-self")
      (should (string= stdout "Emake is up-to-date\n"))
      (should (= exit-code 0)))
    (emake--test-run nil ("version")
      (should (string= stdout (format "emake %s\n" (emake-message-version (emake-find-package-descriptor 'emake)))))
      (should (= exit-code 0)))))


(ert-deftest emake-test-upgrade-self-dry-run-1 ()
  (emake--test-create-emake-archive "emake-archive-1")
  (emake--test-create-emake-archive "emake-archive-2" "999.9")
  (let ((emake--test-project     "trivial-project")
        (emake--test-emake-local (concat ":pa:" (emake--test-tmp-subdir "emake-archive-1")))
        (emake--test-emake-dir   (emake--test-tmp-subdir "upgrade-self-root")))
    (ignore-errors (delete-directory emake--test-emake-dir t))
    (emake--test-run nil ("version")
      (should (string= stdout (format "emake %s\n" (emake-message-version (emake-find-package-descriptor 'emake)))))
      (should (= exit-code 0)))
    (emake--test-run nil ("--setup" (prin1-to-string `(setf emake--upgrade-self-from-forced-pa ,(emake--test-tmp-subdir "emake-archive-2"))) "upgrade-self" "--dry-run")
      ;; `--dry-run' intentionally produces exactly the same output.
      (should (string= stdout "Upgraded or installed 1 package\n"))
      (should (= exit-code 0)))
    (emake--test-run nil ("version")
      ;; But it doesn't actually upgrade anything.
      (should (string= stdout (format "emake %s\n" (emake-message-version (emake-find-package-descriptor 'emake)))))
      (should (= exit-code 0)))))


(provide 'test/upgrade-self)
