# NOTE: The following complications are for Eldev itself.  Projects
# that _use_ Eldev can have it simpler.  Please see the homepage:
#
#     https://github.com/doublep/eldev#travis-ci

language: emacs-lisp
dist: trusty

install:
  - sudo apt-get -y install texinfo
  - git clone https://github.com/rejeep/evm.git /home/travis/.evm
  - export PATH="/home/travis/.evm/bin:$PATH"
  - evm config path /tmp
  - evm install $EVM_EMACS --use

env:
  - EVM_EMACS=emacs-24.4-travis
  - EVM_EMACS=emacs-24.5-travis
  - EVM_EMACS=emacs-25.1-travis
  - EVM_EMACS=emacs-25.2-travis
  - EVM_EMACS=emacs-25.3-travis
  - EVM_EMACS=emacs-26.1-travis
  - EVM_EMACS=emacs-26.2-travis
  - EVM_EMACS=emacs-26.3-travis

script:
  - ELDEV_LOCAL=. ./bin/eldev --packaged --debug --trace --time test --omit-backtraces --expect 200
  # Also require that byte-compilation produces no warnings.  We'd use
  # Eldev itself to byte-compile, but that could hide some problems
  # (for Eldev itself, other packages should be fine) by indirectly
  # loading `.el' first.
  - emacs --batch --eval "(progn
                            (require 'bytecomp)
                            (let ((byte-compile-error-on-warn t))
                              (push default-directory load-path)
                              (unless (and (byte-compile-file \"eldev-util.el\")
                                           (byte-compile-file \"eldev.el\")
                                           (byte-compile-file \"eldev-ert.el\")
                                           (byte-compile-file \"eldev-buttercup.el\"))
                                (kill-emacs 1))))"
  # Ensure that our tests can be compiled cleanly: warnings might
  # indicate something is wrong with the test.  Here we can already
  # use Eldev.
  - ELDEV_LOCAL=. ./bin/eldev --packaged --debug --trace --time compile --set test --warnings-as-errors
  # Run `relint' on Eldev's source code, more as a test of
  # Eldev--relint integration, because we use `rx' macro.
  - ELDEV_LOCAL=. ./bin/eldev --packaged --debug --trace --time lint re


branches:
  except:
    - future-doc
